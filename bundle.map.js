{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/matrix.ts","webpack:///./src/tetrominoes.ts","webpack:///./src/tetris.ts","webpack:///./src/GameCanvas.ts","webpack:///./src/tetris-canvas.ts","webpack:///./src/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","width","height","callback","Error","matrix","Array","from","length","y","x","fromArray","array","some","row","isArray","_","map","arr","forEach","merge","m1","m2","outOfBoundsValue","pos","isColliding","merger","output","item","y2","x2","x1","y1","currentPos","isOutOfBounds","item1","item2","merged","rotateClockwise","threeWideKicks","clockwise","counterClockwise","wallKicks","shape","matrix1","matrix2","matrix3","rotations","currentState","noop","log","console","defaultOptions","tetrominoGen","index","Math","floor","random","randomTetromino","controls","left","right","rotateCounterClockwise","hardDrop","pause","softDrop","hold","onKeyDown","e","preventDefault","onKeyUp","undefined","window","addEventListener","removeEventListener","previewAmount","userOptions","grid","holding","canHold","gameOver","paused","softDropping","_gravityIntervalId","_gravityDelay","opts","assign","render","this","preview","next","fallingTetromino","nextFallingTetromino","ghost","getGhost","applyGravity","gravity","gravityDelay","originalGravityDelay","unloadControls","setupControls","clearInterval","setInterval","fn","moveTetromino","rotate","state","toggleSoftDrop","piece","tetromino","shift","push","clearLines","rowsToSkip","reduce","acc","every","add","Set","newRows","reduceRight","has","unshift","tryMerge","deltaX","deltaY","fallingPos","canMove","newGrid","advanceGrid","direction","rotated","nextIndex","indexOf","currentIndex","directionInWords","test","actualPos","heldPiece","falling","ghostX","ghostY","fallX","fallY","canvas","document","createElement","context","getContext","parent","renderFn","rafId","style","appendTo","appendChild","clearRect","ctx","requestAnimationFrame","stopRendering","cancelAnimationFrame","drawFallingTetromino","colorMap","tileSize","drawTetromino","fillStyle","actualX","actualY","fillRect","translate","setTransform","drawPlayfield","strokeRect","globalAlpha","beginPath","moveTo","lineTo","stroke","drawGridLines","defaultColors","I","O","T","S","Z","J","L","nameToColor","vh","max","documentElement","clientHeight","innerHeight","gameWrapper","getElementById","tile","tetris","nameMap","canvasWidth","canvasHeight","gridWidth","gameCanvas","gridX","playfieldPos","leftSidebarPos","rightSidebarPos","Map","keys","find","color"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/public\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","type Tuple<T, L extends number> = [...T[]] & { length: L };\ntype _Matrix<T, W extends number, H extends number> = Tuple<Tuple<T, W>, H>;\n\nexport interface Vector {\n  x: number;\n  y: number;\n}\n\nexport interface Matrix<\n  T,\n  W extends number = number,\n  H extends number = number\n> {\n  matrix: _Matrix<T, W, H>;\n  width: W;\n  height: H;\n}\n\ntype MatrixCallback<T, W extends number, H extends number, ReturnValue> = (\n  value: T,\n  pos: Vector,\n  matrix: _Matrix<T, W, H>,\n) => ReturnValue;\n\nexport function create<T, W extends number, H extends number>(\n  width: W,\n  height: H,\n  callback?: MatrixCallback<any, W, H, T>,\n): Matrix<T, W, H> {\n  if (width <= 0 || height <= 0) {\n    throw new Error(\"Invalid matrix dimensions.\");\n  }\n\n  const matrix = Array.from({ length: height }, () =>\n    Array.from({ length: width }),\n  ) as Tuple<Tuple<T, W>, H>;\n\n  if (typeof callback !== \"function\") {\n    return { matrix, width, height };\n  }\n\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      matrix[y][x] = callback(matrix[y][x], { x, y }, matrix);\n    }\n  }\n\n  return { matrix, width, height };\n}\n\nexport function fromArray<T, W extends number, H extends number>(\n  array: T[][],\n): Matrix<T, W, H> {\n  const height = array.length as H;\n  const width = (array[0] || []).length as W;\n\n  if (array.some(row => !Array.isArray(row) || row.length !== width)) {\n    throw new Error(\"Array must have rows of equal lengths.\");\n  }\n\n  return create(width, height, (_, { x, y }) => array[y][x]);\n}\n\nexport function map<T, U, W extends number, H extends number>(\n  m: Matrix<T, W, H>,\n  callback: MatrixCallback<T, W, H, U>,\n): Matrix<U, W, H> {\n  return create(m.width, m.height, (_, { x, y }, arr) =>\n    callback(m.matrix[y][x], { x, y }, arr),\n  );\n}\n\nexport function forEach<T, W extends number, H extends number>(\n  m: Matrix<T, W, H>,\n  callback: MatrixCallback<T, W, H, void>,\n): void {\n  for (let y = 0; y < m.height; y++) {\n    for (let x = 0; x < m.width; x++) {\n      callback(m.matrix[y][x], { x, y }, m.matrix);\n    }\n  }\n}\n\nexport function clone<T, W extends number, H extends number>(\n  m: Matrix<T, W, H>,\n): Matrix<T, W, H> {\n  return map(m, item => item);\n}\n\nexport function merge<\n  T,\n  W1 extends number,\n  H1 extends number,\n  W2 extends number,\n  H2 extends number\n>(\n  m1: Matrix<T, W1, H1>,\n  m2: Matrix<T, W2, H2>,\n  outOfBoundsValue: T,\n  pos: Vector,\n  isColliding: (x1: T, x2: T, pos: Vector) => boolean,\n  merger: (x1: T, x2: T, pos: Vector) => T,\n): { matrix: Matrix<T, W1, H1>; merged: boolean } {\n  const output = clone(m1);\n  for (let y2 = 0; y2 < m2.height; y2++) {\n    for (let x2 = 0; x2 < m2.width; x2++) {\n      const x1 = pos.x + x2;\n      const y1 = pos.y + y2;\n      const currentPos = { x: x1, y: y1 };\n      const isOutOfBounds =\n        x1 < 0 || x1 >= m1.width || y1 < 0 || y1 >= m1.height;\n      const item1 = isOutOfBounds ? outOfBoundsValue : m1.matrix[y1][x1];\n      const item2 = m2.matrix[y2][x2];\n      if (isColliding(item1, item2, currentPos)) {\n        return { matrix: m1, merged: false };\n      }\n      if (!isOutOfBounds) {\n        output.matrix[y1][x1] = merger(item1, item2, currentPos);\n      }\n    }\n  }\n\n  return { matrix: output, merged: true };\n}\n\nexport function rotateClockwise<T, W extends number, H extends number>(\n  m: Matrix<T, W, H>,\n): Matrix<T, H, W> {\n  return create<T, H, W>(m.height, m.width, (_, { x, y }) => {\n    return m.matrix[m.height - x - 1][y];\n  });\n}\n\nexport function rotateCounterClockwise<T, W extends number, H extends number>(\n  m: Matrix<T, W, H>,\n): Matrix<T, H, W> {\n  return create<T, H, W>(m.height, m.width, (_, { x, y }) => {\n    return m.matrix[x][m.width - y - 1];\n  });\n}\n","import * as M from \"./matrix\";\n\ntype NumMatrix<W extends number, H extends number> = M.Matrix<0 | object, W, H>;\n\nexport interface Tetromino<\n  W extends number = number,\n  H extends number = number\n> {\n  rotations: [\n    NumMatrix<W, H>,\n    NumMatrix<H, W>,\n    NumMatrix<W, H>,\n    NumMatrix<H, W>\n  ];\n  wallKicks: WallKicks;\n  currentState: NumMatrix<W, H> | NumMatrix<H, W>;\n  value: object;\n  name: string;\n}\n\ninterface Tuple<T extends any, L extends number> extends Array<T> {\n  \"0\": T;\n  length: L;\n}\n\ninterface WallKickTests {\n  clockwise: Tuple<M.Vector, 5>;\n  counterClockwise: Tuple<M.Vector, 5>;\n}\n\ntype WallKicks = Tuple<WallKickTests, 4> | null;\n\n// These wall kicks are used by the tetrominoes\n// J, L, S, T and Z.\nconst threeWideKicks: WallKicks = [\n  {\n    clockwise: [\n      { x: 0, y: 0 },\n      { x: -1, y: 0 },\n      { x: -1, y: -1 },\n      { x: 0, y: 2 },\n      { x: -1, y: 2 },\n    ],\n    counterClockwise: [\n      { x: 0, y: 0 },\n      { x: 1, y: 0 },\n      { x: 1, y: 1 },\n      { x: 0, y: -2 },\n      { x: 1, y: -2 },\n    ],\n  },\n  {\n    clockwise: [\n      { x: 0, y: 0 },\n      { x: 1, y: 0 },\n      { x: 1, y: 1 },\n      { x: 0, y: -2 },\n      { x: 1, y: -2 },\n    ],\n    counterClockwise: [\n      { x: 0, y: 0 },\n      { x: -1, y: 0 },\n      { x: -1, y: -1 },\n      { x: 0, y: 2 },\n      { x: -1, y: 2 },\n    ],\n  },\n  {\n    clockwise: [\n      { x: 0, y: 0 },\n      { x: 1, y: 0 },\n      { x: 1, y: -1 },\n      { x: 0, y: 2 },\n      { x: 1, y: 2 },\n    ],\n    counterClockwise: [\n      { x: 0, y: 0 },\n      { x: -1, y: 0 },\n      { x: -1, y: 1 },\n      { x: 0, y: -2 },\n      { x: -1, y: -2 },\n    ],\n  },\n  {\n    clockwise: [\n      { x: 0, y: 0 },\n      { x: -1, y: 0 },\n      { x: -1, y: 1 },\n      { x: 0, y: -2 },\n      { x: -1, y: -2 },\n    ],\n    counterClockwise: [\n      { x: 0, y: 0 },\n      { x: 1, y: 0 },\n      { x: 1, y: -1 },\n      { x: 0, y: 2 },\n      { x: 1, y: 2 },\n    ],\n  },\n];\n\nconst fourWideKicks: WallKicks = [\n  {\n    clockwise: [\n      { x: 0, y: 0 },\n      { x: -2, y: 0 },\n      { x: 1, y: 0 },\n      { x: -2, y: 1 },\n      { x: 1, y: -2 },\n    ],\n    counterClockwise: [\n      { x: 0, y: 0 },\n      { x: 2, y: 0 },\n      { x: -1, y: 0 },\n      { x: 2, y: -1 },\n      { x: -1, y: 2 },\n    ],\n  },\n  {\n    clockwise: [\n      { x: 0, y: 0 },\n      { x: -1, y: 0 },\n      { x: 2, y: 0 },\n      { x: -1, y: -2 },\n      { x: 2, y: 1 },\n    ],\n    counterClockwise: [\n      { x: 0, y: 0 },\n      { x: 1, y: 0 },\n      { x: -2, y: 0 },\n      { x: 1, y: 2 },\n      { x: -2, y: -1 },\n    ],\n  },\n  {\n    clockwise: [\n      { x: 0, y: 0 },\n      { x: 2, y: 0 },\n      { x: -1, y: 0 },\n      { x: 2, y: -1 },\n      { x: -1, y: 2 },\n    ],\n    counterClockwise: [\n      { x: 0, y: 0 },\n      { x: -2, y: 0 },\n      { x: 1, y: 0 },\n      { x: -2, y: 1 },\n      { x: 1, y: -2 },\n    ],\n  },\n  {\n    clockwise: [\n      { x: 0, y: 0 },\n      { x: 1, y: 0 },\n      { x: -2, y: 0 },\n      { x: 1, y: 2 },\n      { x: -2, y: -1 },\n    ],\n    counterClockwise: [\n      { x: 0, y: 0 },\n      { x: -1, y: 0 },\n      { x: 2, y: 0 },\n      { x: -1, y: -2 },\n      { x: 2, y: 1 },\n    ],\n  },\n];\n\nfunction tetromino<W extends number, H extends number>(\n  name: string,\n  wallKicks: WallKicks,\n  shape: number[][],\n): Tetromino<W, H> {\n  const value = { name };\n  const matrix1 = M.map(M.fromArray<number, W, H>(shape), x => x && value);\n  const matrix2 = M.rotateClockwise(matrix1);\n  const matrix3 = M.rotateClockwise(matrix2);\n  const matrix4 = M.rotateClockwise(matrix3);\n\n  return {\n    name,\n    rotations: [matrix1, matrix2, matrix3, matrix4],\n    currentState: matrix1,\n    wallKicks,\n    value,\n  };\n}\n\n// prettier-ignore\nconst tetrominoes = [\n  // I\n  tetromino(\"I\", fourWideKicks, [\n    [0, 0, 0, 0],\n    [1, 1, 1, 1],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ]),\n\n  // O\n  tetromino(\"O\", null, [\n    [1, 1],\n    [1, 1],\n  ]),\n\n  // T\n  tetromino(\"T\", threeWideKicks, [\n    [0, 1, 0],\n    [1, 1, 1],\n    [0, 0, 0],\n  ]),\n\n  // S\n  tetromino(\"S\", threeWideKicks, [\n    [0, 1, 1],\n    [1, 1, 0],\n    [0, 0, 0],\n  ]),\n\n  // Z\n  tetromino(\"Z\", threeWideKicks, [\n    [1, 1, 0],\n    [0, 1, 1],\n    [0, 0, 0],\n  ]),\n\n  // J\n  tetromino(\"J\", threeWideKicks, [\n    [1, 0, 0],\n    [1, 1, 1],\n    [0, 0, 0],\n  ]),\n\n  // L\n  tetromino(\"L\", threeWideKicks, [\n    [0, 0, 1],\n    [1, 1, 1],\n    [0, 0, 0],\n  ]),\n];\n\nexport default tetrominoes;\n","import * as M from \"./matrix\";\nimport tetrominoes, { Tetromino } from \"./tetrominoes\";\n\nexport type Grid<\n  W extends number = number,\n  H extends number = number\n> = M.Matrix<0 | object, W, H>;\n\nexport interface FallingTetromino {\n  tetromino: Tetromino;\n  pos: M.Vector;\n}\n\n// tslint:disable-next-line no-empty\nfunction noop() {}\n\n// tslint:disable-next-line no-console\nconst log = console.log.bind(console);\n\ntype Controls = Record<\n  | \"left\"\n  | \"right\"\n  | \"rotateClockwise\"\n  | \"rotateCounterClockwise\"\n  | \"hardDrop\"\n  | \"pause\"\n  | \"hold\",\n  () => void\n> & { softDrop: (state: boolean) => void };\n\nfunction defaultControls({\n  left,\n  right,\n  rotateClockwise,\n  rotateCounterClockwise,\n  hardDrop,\n  pause,\n  softDrop,\n  hold,\n}: Controls) {\n  function onKeyDown(e: KeyboardEvent) {\n    switch (e.key) {\n      case \"Shift\":\n      case \"c\":\n        return hold();\n      case \"ArrowDown\":\n        return softDrop(true);\n      case \"ArrowLeft\":\n        return left();\n      case \"ArrowRight\":\n        return right();\n      case \"ArrowUp\":\n      case \"x\":\n        return rotateClockwise();\n      case \"Control\":\n      case \"z\":\n        return rotateCounterClockwise();\n      case \" \":\n        return hardDrop();\n      case \"Escape\":\n      case \"F1\":\n        e.preventDefault();\n        return pause();\n    }\n  }\n\n  function onKeyUp(e: KeyboardEvent) {\n    if (e.key === \"ArrowDown\") {\n      softDrop(false);\n    }\n  }\n\n  if (window === undefined) {\n    log(\n      \"Unable to apply default Tetris keyboard bindings in a non-browser environment. Please provide a callback in the constructor and set up the controls manually.\",\n    );\n    return noop;\n  }\n\n  window.addEventListener(\"keydown\", onKeyDown);\n  window.addEventListener(\"keyup\", onKeyUp);\n\n  return () => {\n    window.removeEventListener(\"keydown\", onKeyDown);\n    window.removeEventListener(\"keyup\", onKeyUp);\n  };\n}\n\ninterface TetrisOptions {\n  render: (tetris: Tetris) => void;\n  controls: (c: Controls) => () => void;\n  tetrominoGen: IterableIterator<Tetromino>;\n  gravityDelay: number;\n  previewAmount: number;\n}\n\ntype Omit<T, K> = Pick<T, Exclude<keyof T, K>>;\ntype Overwrite<T, K> = Omit<T, keyof K> & K;\n\ntype DefaultOptions = Pick<\n  TetrisOptions,\n  \"tetrominoGen\" | \"controls\" | \"previewAmount\"\n>;\nconst defaultOptions: DefaultOptions = {\n  tetrominoGen: randomTetromino(),\n  controls: defaultControls,\n  previewAmount: 3,\n};\n\ntype UserOptions = Overwrite<TetrisOptions, Partial<DefaultOptions>>;\n\nfunction* randomTetromino() {\n  while (true) {\n    const index = Math.floor(Math.random() * tetrominoes.length);\n    yield tetrominoes[index];\n  }\n}\n\nfunction rotateTetromino<W extends number, H extends number>(\n  tetromino: Tetromino<W, H>,\n  direction: 1 | -1,\n): Tetromino<W, H> {\n  const { currentState, rotations } = tetromino;\n  const currentIndex = rotations.indexOf(currentState);\n  const nextIndex =\n    (currentIndex + rotations.length + direction) % rotations.length;\n\n  return Object.assign({}, tetromino, { currentState: rotations[nextIndex] });\n}\n\nexport default class Tetris {\n  grid: Grid = M.create<0, 10, 20>(10, 20, () => 0);\n  tetrominoGen: IterableIterator<Tetromino>;\n  fallingTetromino: FallingTetromino;\n  ghost: FallingTetromino;\n  preview: Tetromino[];\n  holding: Tetromino | undefined = undefined;\n  private canHold: boolean = true;\n  private gameOver: boolean = false;\n  private paused: boolean = false;\n  private softDropping: boolean = false;\n  private originalGravityDelay: number;\n  private _gravityIntervalId: number = 0;\n  private _gravityDelay: number = 0;\n  private unloadControls: () => void;\n\n  get gravity() {\n    return this._gravityDelay;\n  }\n\n  set gravity(x: number) {\n    clearInterval(this._gravityIntervalId);\n\n    if (x > 0) {\n      this._gravityIntervalId = setInterval(\n        () => this.applyGravity(),\n        x,\n      ) as any;\n      this._gravityDelay = x;\n    }\n  }\n\n  constructor(userOptions: UserOptions) {\n    const opts = Object.assign(\n      {},\n      defaultOptions,\n      userOptions,\n    ) as TetrisOptions;\n    opts.render(this);\n    this.tetrominoGen = opts.tetrominoGen;\n    this.preview = Array.from({ length: opts.previewAmount }, () => {\n      return opts.tetrominoGen.next().value;\n    });\n    this.fallingTetromino = this.nextFallingTetromino();\n    this.ghost = this.getGhost(this.fallingTetromino);\n    this.applyGravity();\n\n    this.gravity = opts.gravityDelay;\n    this.originalGravityDelay = opts.gravityDelay;\n\n    this.unloadControls = this.setupControls(opts.controls);\n  }\n\n  setupControls(fn: (c: Controls) => () => void) {\n    return fn({\n      left: () => this.moveTetromino(-1, 0),\n      right: () => this.moveTetromino(1, 0),\n      rotateClockwise: () => this.rotate(1),\n      rotateCounterClockwise: () => this.rotate(-1),\n      hardDrop: () => this.hardDrop(),\n      pause: () => this.pause(),\n      softDrop: (state: boolean) => this.toggleSoftDrop(state),\n      hold: () => this.hold(),\n    });\n  }\n\n  nextFallingTetromino(piece?: Tetromino): FallingTetromino {\n    const tetromino = piece || this.preview.shift()!;\n    const x = Math.floor(\n      this.grid.width / 2 - tetromino.currentState.width / 2,\n    );\n    // SRS says that the I piece spawns one row above the\n    // playfield, while the others spawn 2 rows above.\n    const y = tetromino.name === \"I\" ? -1 : -2;\n\n    if (!piece) {\n      this.preview.push(this.tetrominoGen.next().value);\n    }\n    return { tetromino, pos: { x, y } };\n  }\n\n  clearLines(grid: Grid): Grid {\n    const rowsToSkip = grid.matrix.reduce((acc, row, i) => {\n      if (row.every(x => x !== 0)) {\n        acc.add(i);\n      }\n      return acc;\n    }, new Set<number>());\n\n    type GridMatrix = Array<Array<0 | object>>;\n\n    const emptyRow = () => Array.from({ length: grid.width }, (): 0 => 0);\n\n    const newRows = grid.matrix.reduceRight<GridMatrix>((acc, row, i) => {\n      if (!rowsToSkip.has(i)) {\n        acc.unshift(row);\n      }\n      return acc;\n    }, []);\n\n    while (newRows.length < grid.height) {\n      newRows.unshift(emptyRow());\n    }\n\n    return M.fromArray(newRows);\n  }\n\n  /** Attempt to place the falling tetromino into the grid. */\n  tryMerge(tetromino: Tetromino, pos: M.Vector): [boolean, Grid] {\n    const { matrix, merged } = M.merge(\n      this.grid,\n      tetromino.currentState,\n      {},\n      pos,\n      (x1, x2, { y }) => x1 !== 0 && x2 !== 0 && y >= 0,\n      (x1, x2) => x2 || x1,\n    );\n\n    const result = merged ? this.clearLines(matrix) : matrix;\n    return [merged, result];\n  }\n\n  moveTetromino(deltaX: number, deltaY: number) {\n    if (this.gameOver || this.paused) {\n      return false;\n    }\n\n    const fallingPos = this.fallingTetromino.pos;\n\n    const [canMove] = this.tryMerge(this.fallingTetromino.tetromino, {\n      x: fallingPos.x + deltaX,\n      y: fallingPos.y + deltaY,\n    });\n    if (canMove) {\n      this.fallingTetromino.pos.x += deltaX;\n      this.fallingTetromino.pos.y += deltaY;\n      if (!deltaY) {\n        this.ghost = this.getGhost(this.fallingTetromino);\n      }\n    }\n    return canMove;\n  }\n\n  applyGravity() {\n    if (this.gameOver || this.paused) {\n      return;\n    }\n\n    const moved = this.moveTetromino(0, 1);\n    if (!moved) {\n      if (this.fallingTetromino.pos.y <= 0) {\n        this.gameOver = true;\n        this.unloadControls();\n        log(\"Game over!\");\n      }\n\n      const [_, newGrid] = this.tryMerge(\n        this.fallingTetromino.tetromino,\n        this.fallingTetromino.pos,\n      );\n      this.advanceGrid(newGrid);\n    }\n  }\n\n  rotate(direction: 1 | -1) {\n    if (this.gameOver || this.paused) {\n      return;\n    }\n\n    const { tetromino, pos } = this.fallingTetromino;\n    const { rotations, currentState } = tetromino;\n    const rotated = rotateTetromino(tetromino, direction);\n\n    const currentIndex = rotations.indexOf(currentState);\n    const directionInWords = direction === 1 ? \"clockwise\" : \"counterClockwise\";\n    const tests: M.Vector[] = tetromino.wallKicks\n      ? tetromino.wallKicks[currentIndex][directionInWords]\n      : [{ x: 0, y: 0 }];\n\n    for (const test of tests) {\n      const actualPos = {\n        x: pos.x + test.x,\n        y: pos.y + test.y,\n      };\n      const [canRotate] = this.tryMerge(rotated, actualPos);\n      if (canRotate) {\n        this.fallingTetromino.tetromino = rotated;\n        this.fallingTetromino.pos.x += test.x;\n        this.fallingTetromino.pos.y += test.y;\n        this.ghost = this.getGhost(this.fallingTetromino);\n        return;\n      }\n    }\n  }\n\n  hold() {\n    if (!this.canHold) {\n      return;\n    }\n\n    const heldPiece = this.holding;\n    this.holding = this.fallingTetromino.tetromino;\n    this.fallingTetromino = this.nextFallingTetromino(heldPiece);\n    this.ghost = this.getGhost(this.fallingTetromino);\n    this.holding.currentState = this.holding.rotations[0];\n\n    this.canHold = false;\n  }\n\n  toggleSoftDrop(state: boolean) {\n    if (this.softDropping === state) {\n      return;\n    }\n    this.softDropping = state;\n\n    if (state) {\n      this.applyGravity();\n    }\n\n    this.gravity = state\n      ? this.originalGravityDelay / 2\n      : this.originalGravityDelay;\n  }\n\n  getGhost(falling: FallingTetromino): FallingTetromino {\n    const { tetromino } = falling;\n    const { x: ghostX } = falling.pos;\n\n    let ghostY = falling.pos.y;\n    while (this.tryMerge(tetromino, { x: ghostX, y: ghostY + 1 })[0]) {\n      ghostY += 1;\n    }\n\n    return {\n      tetromino: falling.tetromino,\n      pos: { x: ghostX, y: ghostY },\n    };\n  }\n\n  advanceGrid(newGrid: Grid) {\n    this.grid = newGrid;\n    this.canHold = true;\n    this.fallingTetromino = this.nextFallingTetromino();\n    this.ghost = this.getGhost(this.fallingTetromino);\n    this.applyGravity();\n  }\n\n  hardDrop() {\n    if (this.gameOver || this.paused) {\n      return;\n    }\n\n    const { tetromino } = this.fallingTetromino;\n    const { x: fallX } = this.fallingTetromino.pos;\n\n    let fallY = this.fallingTetromino.pos.y;\n    while (this.tryMerge(tetromino, { x: fallX, y: fallY + 1 })[0]) {\n      fallY += 1;\n    }\n\n    const [_, newGrid] = this.tryMerge(tetromino, {\n      x: fallX,\n      y: fallY,\n    });\n    this.advanceGrid(newGrid);\n  }\n\n  pause() {\n    if (this.gameOver) {\n      this.paused = false;\n      return;\n    }\n\n    this.paused = !this.paused;\n    log(\"Pause:\", this.paused);\n\n    this.gravity = this.paused ? 0 : this._gravityDelay;\n  }\n}\n","type Context = CanvasRenderingContext2D;\n\ninterface RenderOptions {\n  ctx: Context;\n}\n\n// tslint:disable-next-line no-empty\nfunction noop() {}\n\ntype RenderFn = (opts: RenderOptions) => void;\n\nexport default class GameCanvas {\n  private canvas: HTMLCanvasElement = document.createElement(\"canvas\");\n  private context: Context = this.canvas.getContext(\"2d\")!;\n  private parent: HTMLElement | null = null;\n  private renderFn: () => void = noop;\n  private rafId: number = 0;\n  private width: number = 0;\n  private height: number = 0;\n\n  constructor(width: number, height: number) {\n    this.width = this.canvas.width = width;\n    this.height = this.canvas.height = height;\n    this.canvas.style.width = this.width + \"px\";\n    this.canvas.style.height = this.height + \"px\";\n  }\n\n  appendTo(parent: HTMLElement) {\n    if (this.parent) {\n      return;\n    }\n    parent.appendChild(this.canvas);\n    this.parent = parent;\n  }\n\n  render(fn: RenderFn) {\n    if (this.renderFn !== noop) {\n      return;\n    }\n    this.renderFn = () => {\n      this.context.clearRect(0, 0, this.width, this.height);\n      fn({ ctx: this.context });\n      requestAnimationFrame(this.renderFn);\n    };\n    this.rafId = requestAnimationFrame(this.renderFn);\n  }\n\n  stopRendering() {\n    if (this.renderFn === noop) {\n      return;\n    }\n    cancelAnimationFrame(this.rafId);\n    this.rafId = 0;\n    this.renderFn = noop;\n  }\n}\n","import Tetris, { FallingTetromino, Grid } from \"./tetris\";\nimport GameCanvas from \"./GameCanvas\";\nimport { Tetromino } from \"./tetrominoes\";\nimport { forEach, Vector } from \"./matrix\";\nimport tetrominoes from \"./tetrominoes\";\n\ntype Context = CanvasRenderingContext2D;\ntype ColorMap = Map<object, string>;\n\nfunction drawGridLines(\n  ctx: Context,\n  width: number,\n  height: number,\n  tileSize: number,\n) {\n  for (let x = 1; x < width; x++) {\n    ctx.beginPath();\n    ctx.moveTo(x * tileSize, 0);\n    ctx.lineTo(x * tileSize, height * tileSize);\n    ctx.stroke();\n  }\n\n  for (let y = 1; y < height; y++) {\n    ctx.beginPath();\n    ctx.moveTo(0, y * tileSize);\n    ctx.lineTo(width * tileSize, y * tileSize);\n    ctx.stroke();\n  }\n}\n\nfunction drawGrid(\n  ctx: Context,\n  colorMap: ColorMap,\n  grid: Grid,\n  tileSize: number,\n) {\n  forEach(grid, (value, { x, y }) => {\n    if (value === 0) {\n      return;\n    }\n\n    ctx.fillStyle = colorMap.get(value)!;\n    ctx.fillRect(x * tileSize, y * tileSize, tileSize, tileSize);\n  });\n}\n\nfunction drawFallingTetromino(\n  ctx: Context,\n  colorMap: ColorMap,\n  fallingTetromino: FallingTetromino,\n  tileSize: number,\n) {\n  const pos = fallingTetromino.pos;\n  drawTetromino(ctx, colorMap, fallingTetromino.tetromino, pos, tileSize);\n}\n\nfunction drawTetromino(\n  ctx: Context,\n  colorMap: ColorMap,\n  tetromino: Tetromino,\n  pos: Vector,\n  tileSize: number,\n) {\n  ctx.fillStyle = colorMap.get(tetromino.value)!;\n  forEach(tetromino.currentState, (value, { x, y }) => {\n    if (value === 0) {\n      return;\n    }\n\n    const actualX = pos.x + x;\n    const actualY = pos.y + y;\n\n    ctx.fillRect(actualX * tileSize, actualY * tileSize, tileSize, tileSize);\n  });\n}\n\nfunction nameMapToColorMap(nameMap: Record<string, string>): ColorMap {\n  return new Map(\n    Object.keys(nameMap).reduce<Array<[object, string]>>((acc, name) => {\n      const tetromino = tetrominoes.find(x => x.name === name);\n      const color = nameMap[name];\n      if (tetromino) {\n        acc.push([tetromino.value, color]);\n      }\n      return acc;\n    }, []),\n  );\n}\n\nfunction translate(\n  ctx: Context,\n  x: number,\n  y: number,\n  fn: (ctx: Context) => void,\n) {\n  ctx.translate(x, y);\n  fn(ctx);\n  ctx.setTransform(1, 0, 0, 1, 0, 0);\n}\n\nfunction drawPlayfield(\n  ctx: Context,\n  colorMap: ColorMap,\n  pos: Vector,\n  grid: Grid,\n  fallingTetromino: FallingTetromino,\n  ghost: FallingTetromino,\n  tileSize: number,\n) {\n  translate(ctx, pos.x, pos.y, () => {\n    ctx.strokeRect(0, 0, tileSize * grid.width, tileSize * 20);\n    drawFallingTetromino(ctx, colorMap, fallingTetromino, tileSize);\n    ctx.globalAlpha = 0.5;\n    drawFallingTetromino(ctx, colorMap, ghost, tileSize);\n    ctx.globalAlpha = 1;\n    drawGrid(ctx, colorMap, grid, tileSize);\n    drawGridLines(ctx, grid.width, grid.height, tileSize);\n  });\n}\n\nfunction drawLeftSidebar(\n  ctx: Context,\n  colorMap: ColorMap,\n  pos: Vector,\n  holding: Tetromino | undefined,\n  tileSize: number,\n) {\n  translate(ctx, pos.x, pos.y, () => {\n    ctx.strokeRect(0, 0, tileSize * 6, tileSize * 20);\n\n    if (holding) {\n      drawTetromino(ctx, colorMap, holding, { x: 1, y: 1 }, tileSize);\n    }\n  });\n}\n\nfunction drawRightSidebar(\n  ctx: Context,\n  colorMap: ColorMap,\n  pos: Vector,\n  preview: Tetromino[],\n  tileSize: number,\n) {\n  translate(ctx, pos.x, pos.y, () => {\n    ctx.strokeRect(0, 0, tileSize * 6, tileSize * 20);\n\n    preview.forEach((tetromino, i) => {\n      drawTetromino(ctx, colorMap, tetromino, { x: 1, y: i * 4 + 1 }, tileSize);\n    });\n  });\n}\n\nconst defaultColors: Record<string, string> = {\n  I: \"cyan\",\n  O: \"yellow\",\n  T: \"purple\",\n  S: \"green\",\n  Z: \"red\",\n  J: \"blue\",\n  L: \"orange\",\n};\n\nexport default function tetrisCanvas(\n  parent: HTMLElement,\n  tileSize: number,\n  nameToColor?: Record<string, string>,\n) {\n  function tile(x: number) {\n    return x * tileSize;\n  }\n\n  return function _tetrisCanvas(tetris: Tetris) {\n    const canvasWidth = tile(tetris.grid.width + 12);\n    const canvasHeight = tile(tetris.grid.height);\n    const gridWidth = tile(tetris.grid.width);\n    const gameCanvas = new GameCanvas(canvasWidth, canvasHeight);\n    const gridX = tile(6);\n    const rightSidebarX = gridX + gridWidth;\n\n    const playfieldPos: Vector = { x: gridX, y: 0 };\n    const leftSidebarPos: Vector = { x: 0, y: 0 };\n    const rightSidebarPos: Vector = { x: rightSidebarX, y: 0 };\n\n    const colorMap = nameMapToColorMap(nameToColor || defaultColors);\n\n    gameCanvas.appendTo(parent);\n    gameCanvas.render(({ ctx }) => {\n      const { grid, fallingTetromino, ghost, preview, holding } = tetris;\n\n      drawLeftSidebar(ctx, colorMap, leftSidebarPos, holding, tileSize);\n      drawPlayfield(\n        ctx,\n        colorMap,\n        playfieldPos,\n        grid,\n        fallingTetromino,\n        ghost,\n        tileSize,\n      );\n      drawRightSidebar(ctx, colorMap, rightSidebarPos, preview, tileSize);\n    });\n  };\n}\n","import Tetris from \"./tetris\";\nimport tetrisCanvas from \"./tetris-canvas\";\n\nconst vh = Math.max(\n  document.documentElement.clientHeight || 0,\n  window.innerHeight || 0,\n);\n\nconst gameWrapper = document.getElementById(\"game-wrapper\");\n\nconsole.log(\"Hello\", gameWrapper);\nif (gameWrapper) {\n  const game = new Tetris({\n    gravityDelay: 200,\n    render: tetrisCanvas(gameWrapper, Math.floor(vh / 20)),\n  });\n}\n"],"sourceRoot":""}